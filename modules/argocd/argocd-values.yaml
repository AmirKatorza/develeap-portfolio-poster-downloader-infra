## Argo Configs
configs:
  params:
    server.insecure: true
  secret:
    # -- Create the argocd-secret
    createSecret: true
    # -- Bcrypt hashed admin password
    ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
    ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`    
    argocdServerAdminPassword: "$2a$10$5UUz.dQqW/xxCom7vWE33.M0TavnPho4Y3BI/6.CRRFagCDWD8oc6"
    
# Server Config
server:
  ingress:
    # -- Enable an ingress resource for the Argo CD server
    enabled: true
    # annotations:
    #   cert-manager.io/cluster-issuer: "letsencrypt"
      # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"  # Redirect HTTP to HTTPS (check if your ingress controller supports this annotation)
    # -- Defines which ingress controller will implement the resource
    ingressClassName: "nginx"
    # -- List of ingress hosts
    ## Argo Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    hosts: 
      - poster-downloader.ddns.net
    # -- List of ingress paths
    paths:
      - /argocd
    # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`
    pathType: Exact  
    # -- Ingress TLS configuration
    tls:
      - hosts:
          - poster-downloader.ddns.net
        # Provide a name for the TLS secret that cert-manager will create or update
        secretName: source-tls
    # Assuming you want to enforce HTTPS, it might not be necessary to explicitly enable HTTP
    # If you want to allow HTTP access alongside HTTPS, specific ingress controller annotations are typically used to handle redirection or dual access configurations
    https: true